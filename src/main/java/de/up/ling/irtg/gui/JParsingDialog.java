/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.up.ling.irtg.gui;

import java.awt.BorderLayout;
import java.awt.Frame;
import java.io.File;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author koller
 */
public class JParsingDialog extends javax.swing.JDialog {
    public static enum Algorithm {
        DEFAULT("Default"),
        CONDENSED_BOTTOM_UP("Condensed bottom-up"),
        SIBLING_FINDER("Sibling finder");
        
        private String label;
        Algorithm(String label) { this.label = label; }

        @Override
        public String toString() {
            return label;
        }        
    }
    
    public static enum Filtering {
        BASIC("Basic"),
        BINARIZED("Binarized");
        
        private String label;
        Filtering(String label) { this.label = label; }

        @Override
        public String toString() {
            return label;
        }
    }
    
    public static enum Pruning {
        NONE, BEAM_SEARCH, CTF
    }

    private Map<String,String> inputValues;
    private Map.Entry<String, String> theOneNonemptyInput;
    private Algorithm selectedAlgorithm;
    private Filtering selectedFiltering;
    private Pruning selectedPruning;
    private double pruningThreshold;
    private File pruningFtcMap;
    
    private static String previousPruningFtcMap = null;
    
    /**
     * Creates new form JParsingDialog
     */
    public JParsingDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        // populate algorithm and filtering methods
        cbAlgorithm.removeAllItems();
        for (Algorithm it : Algorithm.values()) {
            cbAlgorithm.addItem(it);
        }

        cbFiltering.removeAllItems();
        for (Filtering it : Filtering.values()) {
            cbFiltering.addItem(it);
        }

        // disable pruning controls initially
        lbThreshold.setEnabled(false);
        tfThreshold.setEnabled(false);

        lbFtcMap.setEnabled(false);
        tfFtcMap.setEnabled(false);
        bFtcMapFileChooser.setEnabled(false);

        // disable filtering choices
        cbFiltering.setEnabled(false);
        
        // initialize FTC name
        if( previousPruningFtcMap != null ) {
            tfFtcMap.setText(previousPruningFtcMap);
        }
    }

    public static JParsingDialog create(List<String> interpretations, Frame parent, boolean modal) {
        JParsingDialog ret = new JParsingDialog(parent, modal);

        ret.pInterpretationsContainer.removeAll();
        ret.pInterpretationsContainer.setLayout(new BorderLayout());
        ret.pInterpretationsContainer.add(new JInterpretationsPanel(interpretations), BorderLayout.CENTER);
        ret.pInterpretationsContainer.revalidate();
        ret.pInterpretationsContainer.repaint();
        ret.validate();
        ret.pack();

        ret.setResizable(false);

        ret.getRootPane().setDefaultButton(ret.bOk);

        return ret;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbAlgorithm = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        chFiltering = new javax.swing.JCheckBox();
        cbFiltering = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rbNone = new javax.swing.JRadioButton();
        rbBeamSearch = new javax.swing.JRadioButton();
        rbCoarseToFine = new javax.swing.JRadioButton();
        lbThreshold = new javax.swing.JLabel();
        tfThreshold = new javax.swing.JTextField();
        lbFtcMap = new javax.swing.JLabel();
        tfFtcMap = new javax.swing.JTextField();
        bFtcMapFileChooser = new javax.swing.JButton();
        bOk = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        pInterpretationsContainer = new javax.swing.JPanel();
        pDummy = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Parsing algorithm"));

        jLabel1.setText("Algorithm");

        cbAlgorithm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAlgorithmActionPerformed(evt);
            }
        });

        jLabel2.setText("Filtering");

        chFiltering.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chFilteringActionPerformed(evt);
            }
        });

        cbFiltering.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFilteringActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(93, 93, 93)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chFiltering)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltering, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(cbAlgorithm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(chFiltering)
                    .addComponent(cbFiltering, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pruning"));

        jLabel3.setText("Method");

        buttonGroup1.add(rbNone);
        rbNone.setSelected(true);
        rbNone.setText("none");
        rbNone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNoneActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbBeamSearch);
        rbBeamSearch.setText("beam search");
        rbBeamSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbBeamSearchActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbCoarseToFine);
        rbCoarseToFine.setText("coarse-to-fine");
        rbCoarseToFine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCoarseToFineActionPerformed(evt);
            }
        });

        lbThreshold.setText("Threshold");

        tfThreshold.setText("0.0001");

        lbFtcMap.setText("Fine-to-coarse map");

        bFtcMapFileChooser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open-16x16.png"))); // NOI18N
        bFtcMapFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFtcMapFileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lbThreshold)
                    .addComponent(lbFtcMap))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfThreshold)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbCoarseToFine)
                            .addComponent(rbBeamSearch)
                            .addComponent(rbNone))
                        .addGap(0, 547, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tfFtcMap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bFtcMapFileChooser)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rbNone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbBeamSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbCoarseToFine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbThreshold)
                    .addComponent(tfThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFtcMap)
                    .addComponent(tfFtcMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bFtcMapFileChooser))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bOk.setText("Ok");
        bOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });

        bCancel.setText("Cancel");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        pDummy.setBackground(new java.awt.Color(255, 0, 204));

        javax.swing.GroupLayout pDummyLayout = new javax.swing.GroupLayout(pDummy);
        pDummy.setLayout(pDummyLayout);
        pDummyLayout.setHorizontalGroup(
            pDummyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pDummyLayout.setVerticalGroup(
            pDummyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 66, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pInterpretationsContainerLayout = new javax.swing.GroupLayout(pInterpretationsContainer);
        pInterpretationsContainer.setLayout(pInterpretationsContainerLayout);
        pInterpretationsContainerLayout.setHorizontalGroup(
            pInterpretationsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pInterpretationsContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pDummy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pInterpretationsContainerLayout.setVerticalGroup(
            pInterpretationsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pInterpretationsContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pDummy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bCancel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pInterpretationsContainer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pInterpretationsContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bOk)
                    .addComponent(bCancel))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chFilteringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chFilteringActionPerformed
        cbFiltering.setEnabled(chFiltering.isSelected());
    }//GEN-LAST:event_chFilteringActionPerformed

    private void rbNoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNoneActionPerformed
        // disable all pruning controls
        lbThreshold.setEnabled(false);
        tfThreshold.setEnabled(false);

        lbFtcMap.setEnabled(false);
        tfFtcMap.setEnabled(false);
        bFtcMapFileChooser.setEnabled(false);
    }//GEN-LAST:event_rbNoneActionPerformed

    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed
        inputValues = ((JInterpretationsPanel) pInterpretationsContainer.getComponent(0)).getInputValues();
        
        theOneNonemptyInput = null;        
        if( inputValues.size() == 1 ) {
            theOneNonemptyInput = inputValues.entrySet().iterator().next();
        }
        
        selectedAlgorithm = (Algorithm) cbAlgorithm.getSelectedItem();
        
        selectedFiltering = null;
        if( chFiltering.isSelected() ) {
            selectedFiltering = (Filtering) cbFiltering.getSelectedItem();
        }
        
        if( rbNone.isSelected() ) {
            selectedPruning = Pruning.NONE;
        } else if( rbBeamSearch.isSelected() ) {
            selectedPruning = Pruning.BEAM_SEARCH;
        } else {
            selectedPruning = Pruning.CTF;
        }
        
        pruningThreshold = Double.NaN;
        if( tfThreshold.isEnabled() ) {
            pruningThreshold = Double.parseDouble(tfThreshold.getText());
        }
        
        pruningFtcMap = null;
        if( tfFtcMap.isEnabled() ) {
            pruningFtcMap = new File(tfFtcMap.getText());
            previousPruningFtcMap = tfFtcMap.getText();
        }
        
        setVisible(false);
    }//GEN-LAST:event_bOkActionPerformed

    public Map<String, String> getInputValues() {
        return inputValues;
    }

    public Map.Entry<String, String> getTheOneNonemptyInput() {
        return theOneNonemptyInput;
    }

    public Algorithm getSelectedAlgorithm() {
        return selectedAlgorithm;
    }

    public Filtering getSelectedFiltering() {
        return selectedFiltering;
    }

    public Pruning getSelectedPruning() {
        return selectedPruning;
    }

    public double getPruningThreshold() {
        return pruningThreshold;
    }

    public File getPruningFtcMap() {
        return pruningFtcMap;
    }

    
    
    private void cbAlgorithmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAlgorithmActionPerformed
    }//GEN-LAST:event_cbAlgorithmActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        inputValues = null;
        theOneNonemptyInput = null;
        
        setVisible(false);
    }//GEN-LAST:event_bCancelActionPerformed

    private void rbBeamSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbBeamSearchActionPerformed
        // enable threshold, disable ftc
        lbThreshold.setEnabled(true);
        tfThreshold.setEnabled(true);

        lbFtcMap.setEnabled(false);
        tfFtcMap.setEnabled(false);
        bFtcMapFileChooser.setEnabled(false);
    }//GEN-LAST:event_rbBeamSearchActionPerformed

    private void rbCoarseToFineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCoarseToFineActionPerformed
        // enable threshold, enable ftc
        lbThreshold.setEnabled(true);
        tfThreshold.setEnabled(true);

        lbFtcMap.setEnabled(true);
        tfFtcMap.setEnabled(true);
        bFtcMapFileChooser.setEnabled(true);
    }//GEN-LAST:event_rbCoarseToFineActionPerformed

    private void bFtcMapFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFtcMapFileChooserActionPerformed
        SwingUtilities.invokeLater(() -> {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
            int result = fileChooser.showOpenDialog(this);

            if (result == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                tfFtcMap.setText(selectedFile.getAbsolutePath());
            }
        });
    }//GEN-LAST:event_bFtcMapFileChooserActionPerformed

    private void cbFilteringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFilteringActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFilteringActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        System.setProperty("apple.laf.useScreenMenuBar", "true");
        System.setProperty("com.apple.mrj.application.apple.menu.about.name", "Alto");

        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                List<String> interps = Arrays.asList("string", "tree");
                JParsingDialog dialog = JParsingDialog.create(interps, new javax.swing.JFrame(), true);

//                JParsingDialog dialog = new JParsingDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bFtcMapFileChooser;
    private javax.swing.JButton bOk;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<Algorithm> cbAlgorithm;
    private javax.swing.JComboBox<Filtering> cbFiltering;
    private javax.swing.JCheckBox chFiltering;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbFtcMap;
    private javax.swing.JLabel lbThreshold;
    private javax.swing.JPanel pDummy;
    private javax.swing.JPanel pInterpretationsContainer;
    private javax.swing.JRadioButton rbBeamSearch;
    private javax.swing.JRadioButton rbCoarseToFine;
    private javax.swing.JRadioButton rbNone;
    private javax.swing.JTextField tfFtcMap;
    private javax.swing.JTextField tfThreshold;
    // End of variables declaration//GEN-END:variables
}

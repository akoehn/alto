interpretation string: de.up.ling.irtg.algebra.StringAlgebra
interpretation graph: de.up.ling.irtg.algebra.graph.GraphAlgebra

S! -> want(NP, VP)
[string] *(?1, *(wants, *(to, ?2)))
[graph]  "(w / want-01  :ARG0 (b)  :ARG1 (g)) + ?1(b) + ?2(g, b)" (?1, ?2)

NP -> boy
[string] *(the, boy)
[graph]  "\x (x / boy)"

VP -> go
[string] *(to, go)
[graph]  "\x, y (x / go-01  :ARG0 (y))"



